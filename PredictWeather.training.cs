﻿// This file was auto-generated by ML.NET Model Builder. 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Microsoft.ML.Data;
using Microsoft.ML.Trainers.FastTree;
using Microsoft.ML.Trainers;
using Microsoft.ML.Transforms;
using Microsoft.ML;

namespace WeaterApp
{
    public partial class PredictWeather
    {
        /// <summary>
        /// Retrains model using the pipeline generated as part of the training process. For more information on how to load data, see aka.ms/loaddata.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <param name="trainData"></param>
        /// <returns></returns>
        public static ITransformer RetrainPipeline(MLContext mlContext, IDataView trainData)
        {
            var pipeline = BuildPipeline(mlContext);
            var model = pipeline.Fit(trainData);

            return model;
        }

        /// <summary>
        /// build the pipeline that is used from model builder. Use this function to retrain model.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <returns></returns>
        public static IEstimator<ITransformer> BuildPipeline(MLContext mlContext)
        {
            // Data process configuration with pipeline data transformations
            var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@"City", @"City", outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      
                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@"Id", @"Id"),new InputOutputColumnPair(@"WindSpeed", @"WindSpeed"),new InputOutputColumnPair(@"Humidity", @"Humidity")}))      
                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@"time",outputColumnName:@"time"))      
                                    .Append(mlContext.Transforms.Concatenate(@"Features", new []{@"City",@"Id",@"WindSpeed",@"Humidity",@"time"}))      
                                    .Append(mlContext.Regression.Trainers.FastTree(new FastTreeRegressionTrainer.Options(){NumberOfLeaves=13,MinimumExampleCountPerLeaf=12,NumberOfTrees=4,MaximumBinCountPerFeature=222,FeatureFraction=0.913080986874278,LearningRate=0.897947193991173,LabelColumnName=@"Temperature",FeatureColumnName=@"Features"}));

            return pipeline;
        }
    }
}
